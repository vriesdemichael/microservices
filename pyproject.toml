[tool.poetry]
name = "dataformats"
version = "0.1.0"
description = "data formats and contracts for microservices"
authors = ["MichaÃ«l de Vries <vriesdemichael@gmail.com>"]
license = "GPL-3.0 license"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
hyperlink = "*"
pydantic = ">=2.0a1"
rfc3986 = "*"
requests = "*"
types-requests = "*"
starlette = "^0.27.0"


[tool.poetry.group.dev.dependencies]
black = "*"
pytest = "*"
pytest-cov = "*"
Flake8-pyproject = "*"
isort = "*"
mypy = "*"
httpx = "^0.24.1"
pytest-xdist = "^3.3.1"
ruff = "^0.0.269"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
ignore_missing_imports = true
exclude = ["tests/jsonschema", ".venv"]

[tool.pytest.ini_options]
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%H:%M:%S"
log_cli = true
log_cli_level = "INFO"
log_level = "INFO"
# addopts = "--cov --cov-report xml:cov.xml --no-summary --no-header"
addopts = "--cov --cov-report xml:cov.xml"


[tool.isort]
atomic = true
profile = "black"
line_length = 120


[tool.black]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line-length = 120
exclude = '''
/(
    \.git
   |\.mypy_cache
   |\.tox
   |\venv
   |\.venv
   | _build
   | buck-out
   | build
   | dist
)/
'''

[tool.coverage.run]
parallel = true
source = ["src", "tests"]
context = '${CONTEXT}'
omit = []

[tool.ruff]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
ignore = [
    "E501", # line too long, handled by black
    # "B008",  # do not perform function calls in argument defaults
    "C901", # too complex
]
fix = true
exclude = [".venv", "tests/json_schema_test_suite"]

[tool.ruff.per-file-ignores]


[tool.ruff.isort]
known-third-party = ["dataformats"]
